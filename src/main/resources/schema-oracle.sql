-- ARTIST
CREATE TABLE artist (
    id_artist NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nume_scena VARCHAR2(50) CONSTRAINT artist_nume_scena_nn NOT NULL,
    CONSTRAINT artist_nume_scena_uk UNIQUE (nume_scena),
    nume_real VARCHAR2(100),
    data_nasterii DATE,
    tara_origine VARCHAR2(50) DEFAULT 'Necunoscut' CONSTRAINT artist_tara_origine_nn NOT NULL
);

-- GEN_MUZICAL
CREATE TABLE gen_muzical (
    id_gen NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nume_gen VARCHAR2(50) CONSTRAINT gen_muzical_nume_gen_nn NOT NULL;
);

-- ALBUM
CREATE TABLE album (
    id_album NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    titlu VARCHAR2(100) CONSTRAINT album_titlu_nn NOT NULL,
    data_lansare DATE,
    id_artist NUMBER,
    id_gen NUMBER,
    CONSTRAINT fk_album_artist FOREIGN KEY (id_artist) REFERENCES artist(id_artist),
    CONSTRAINT fk_album_gen FOREIGN KEY (id_gen) REFERENCES gen_muzical(id_gen)
);

-- PIESE
CREATE TABLE piesa (
    id_piesa NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    titlu VARCHAR2(100) NOT NULL,
    id_album NUMBER,
    id_gen NUMBER,
    CONSTRAINT fk_piesa_album FOREIGN KEY (id_album) REFERENCES album(id_album),
    CONSTRAINT fk_piesa_gen FOREIGN KEY (id_gen) REFERENCES gen_muzical(id_gen)
);

-- PREMIU
CREATE TABLE premiu (
    id_premiu NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nume VARCHAR2(100),
    categorie VARCHAR2(100),
    an NUMBER,
    id_artist NUMBER,
    CONSTRAINT fk_premiu_artist FOREIGN KEY (id_artist) REFERENCES artist(id_artist)
);

-- LABEL
CREATE TABLE label (
    id_label NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nume_label VARCHAR2(100) NOT NULL,
    tara_origine VARCHAR2(50),
    an_infiintare NUMBER,
    id_adrese NUMBER,

);

-- ADRESE_LABEL
CREATE TABLE adrese_label (
    id_adrese NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    localitate VARCHAR2(100),
    strada VARCHAR2(100),
    id_label   NUMBER(4),
    CONSTRAINT adrese_label_fk FOREIGN KEY (id_label)
        REFERENCES label(id_label)
);

-- CONTRACT
CREATE TABLE contract (
    id_contract NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    id_artist NUMBER,
    id_label NUMBER,
    data_start DATE,
    data_incheiere DATE,
    CONSTRAINT fk_contract_artist FOREIGN KEY (id_artist) REFERENCES artist(id_artist),
    CONSTRAINT fk_contract_label FOREIGN KEY (id_label) REFERENCES label(id_label)
);

-- COLABORARE
CREATE TABLE colaborare (
    id_artist NUMBER,
    id_piesa NUMBER,
    PRIMARY KEY (id_artist, id_piesa),
    CONSTRAINT fk_colab_artist FOREIGN KEY (id_artist) REFERENCES artist(id_artist),
    CONSTRAINT fk_colab_piesa FOREIGN KEY (id_piesa) REFERENCES piesa(id_piesa)
);

CREATE TABLE utilizator (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    email VARCHAR2(255) NOT NULL UNIQUE,
    password VARCHAR2(255),
    nume VARCHAR2(255),
    prenume VARCHAR2(255),
    role VARCHAR2(50) NOT NULL
);

CREATE TABLE producator (
    id_producator NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nume          VARCHAR2(100) CONSTRAINT producator_nume_nn NOT NULL,
    specializare  VARCHAR2(50),
    tara_origine  VARCHAR2(50) DEFAULT 'Necunoscut' CONSTRAINT producator_tara_origine_nn NOT NULL
);

CREATE TABLE productie (
    id_album      NUMBER,
    id_producator NUMBER,
    tip_productie VARCHAR2(50) CONSTRAINT productie_tip_productie_nn NOT NULL,
    buget         NUMBER(12, 2) CONSTRAINT productie_buget_nn NOT NULL,
    CONSTRAINT productie_buget_pozitiv CHECK ( buget > 0 ),
    CONSTRAINT productie_pk PRIMARY KEY (id_album, id_producator),
    CONSTRAINT productie_id_album_fk FOREIGN KEY (id_album) REFERENCES album(id_album),
    CONSTRAINT productie_id_producator_fk FOREIGN KEY (id_producator) REFERENCES producator(id_producator)
);
COMMIT;



